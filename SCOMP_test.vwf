/*<simulation_settings>
<ftestbench_cmd>quartus_eda --gen_testbench --tool=modelsim_oem --format=vhdl --write_settings_files=off SCOMP_bare -c SCOMP_bare --vector_source="F:/QuartusWork/SCOMP/SCOMP_test.vwf" --testbench_file="F:/QuartusWork/SCOMP/simulation/qsim/SCOMP_test.vwf.vht"</ftestbench_cmd>
<ttestbench_cmd>quartus_eda --gen_testbench --tool=modelsim_oem --format=vhdl --write_settings_files=off SCOMP_bare -c SCOMP_bare --vector_source="F:/QuartusWork/SCOMP/SCOMP_test.vwf" --testbench_file="F:/QuartusWork/SCOMP/simulation/qsim/SCOMP_test.vwf.vht"</ttestbench_cmd>
<fnetlist_cmd>quartus_eda --write_settings_files=off --simulation --functional=on --flatten_buses=off --tool=modelsim_oem --format=vhdl --output_directory="F:/QuartusWork/SCOMP/simulation/qsim/" SCOMP_bare -c SCOMP_bare</fnetlist_cmd>
<tnetlist_cmd>quartus_eda --write_settings_files=off --simulation --functional=off --flatten_buses=off --timescale=1ps --tool=modelsim_oem --format=vhdl --output_directory="F:/QuartusWork/SCOMP/simulation/qsim/" SCOMP_bare -c SCOMP_bare</tnetlist_cmd>
<modelsim_script>onerror {exit -code 1}
vlib work
vcom -work work SCOMP_bare.vho
vcom -work work SCOMP_test.vwf.vht
vsim -novopt -c -t 1ps -L cyclonev -L altera -L altera_mf -L 220model -L sgate -L altera_lnsim work.SCOMP_vhd_vec_tst
vcd file -direction SCOMP_bare.msim.vcd
vcd add -internal SCOMP_vhd_vec_tst/*
vcd add -internal SCOMP_vhd_vec_tst/i1/*
proc simTimestamp {} {
    echo "Simulation time: $::now ps"
    if { [string equal running [runStatus]] } {
        after 2500 simTimestamp
    }
}
after 2500 simTimestamp
run -all
quit -f
</modelsim_script>
<modelsim_script_timing>onerror {exit -code 1}
vlib work
vcom -work work SCOMP_bare.vho
vcom -work work SCOMP_test.vwf.vht
vsim -novopt -c -t 1ps -sdfmax SCOMP_vhd_vec_tst/i1=SCOMP_bare_vhd.sdo -L cyclonev -L altera -L altera_mf -L 220model -L sgate -L altera_lnsim work.SCOMP_vhd_vec_tst
vcd file -direction SCOMP_bare.msim.vcd
vcd add -internal SCOMP_vhd_vec_tst/*
vcd add -internal SCOMP_vhd_vec_tst/i1/*
proc simTimestamp {} {
    echo "Simulation time: $::now ps"
    if { [string equal running [runStatus]] } {
        after 2500 simTimestamp
    }
}
after 2500 simTimestamp
run -all
quit -f
</modelsim_script_timing>
<hdl_lang>vhdl</hdl_lang>
</simulation_settings>*/
/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 2019  Intel Corporation. All rights reserved.
Your use of Intel Corporation's design tools, logic functions 
and other software and tools, and any partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Intel Program License 
Subscription Agreement, the Intel Quartus Prime License Agreement,
the Intel FPGA IP License Agreement, or other applicable license
agreement, including, without limitation, that your use is for
the sole purpose of programming logic devices manufactured by
Intel and sold by Intel or its authorized distributors.  Please
refer to the applicable agreement for further details, at
https://fpgasoftware.intel.com/eula.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 10000.0;
	SIMULATION_TIME = 0.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("dbg_AC")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 16;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("dbg_AC[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dbg_AC";
}

SIGNAL("dbg_AC[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dbg_AC";
}

SIGNAL("dbg_AC[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dbg_AC";
}

SIGNAL("dbg_AC[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dbg_AC";
}

SIGNAL("dbg_AC[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dbg_AC";
}

SIGNAL("dbg_AC[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dbg_AC";
}

SIGNAL("dbg_AC[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dbg_AC";
}

SIGNAL("dbg_AC[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dbg_AC";
}

SIGNAL("dbg_AC[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dbg_AC";
}

SIGNAL("dbg_AC[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dbg_AC";
}

SIGNAL("dbg_AC[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dbg_AC";
}

SIGNAL("dbg_AC[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dbg_AC";
}

SIGNAL("dbg_AC[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dbg_AC";
}

SIGNAL("dbg_AC[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dbg_AC";
}

SIGNAL("dbg_AC[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dbg_AC";
}

SIGNAL("dbg_AC[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dbg_AC";
}

SIGNAL("dbg_MA")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 11;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("dbg_MA[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dbg_MA";
}

SIGNAL("dbg_MA[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dbg_MA";
}

SIGNAL("dbg_MA[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dbg_MA";
}

SIGNAL("dbg_MA[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dbg_MA";
}

SIGNAL("dbg_MA[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dbg_MA";
}

SIGNAL("dbg_MA[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dbg_MA";
}

SIGNAL("dbg_MA[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dbg_MA";
}

SIGNAL("dbg_MA[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dbg_MA";
}

SIGNAL("dbg_MA[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dbg_MA";
}

SIGNAL("dbg_MA[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dbg_MA";
}

SIGNAL("dbg_MA[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dbg_MA";
}

SIGNAL("dbg_PC")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 11;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("dbg_PC[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dbg_PC";
}

SIGNAL("dbg_PC[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dbg_PC";
}

SIGNAL("dbg_PC[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dbg_PC";
}

SIGNAL("dbg_PC[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dbg_PC";
}

SIGNAL("dbg_PC[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dbg_PC";
}

SIGNAL("dbg_PC[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dbg_PC";
}

SIGNAL("dbg_PC[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dbg_PC";
}

SIGNAL("dbg_PC[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dbg_PC";
}

SIGNAL("dbg_PC[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dbg_PC";
}

SIGNAL("dbg_PC[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dbg_PC";
}

SIGNAL("dbg_PC[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dbg_PC";
}

SIGNAL("dbg_IR")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 16;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("dbg_IR[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "dbg_IR";
}

SIGNAL("dbg_IR[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "dbg_IR";
}

SIGNAL("dbg_IR[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "dbg_IR";
}

SIGNAL("dbg_IR[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "dbg_IR";
}

SIGNAL("dbg_IR[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "dbg_IR";
}

SIGNAL("dbg_IR[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "dbg_IR";
}

SIGNAL("dbg_IR[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "dbg_IR";
}

SIGNAL("dbg_IR[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "dbg_IR";
}

SIGNAL("dbg_IR[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "dbg_IR";
}

SIGNAL("dbg_IR[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "dbg_IR";
}

SIGNAL("dbg_IR[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "dbg_IR";
}

SIGNAL("dbg_IR[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "dbg_IR";
}

SIGNAL("dbg_IR[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "dbg_IR";
}

SIGNAL("dbg_IR[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "dbg_IR";
}

SIGNAL("dbg_IR[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "dbg_IR";
}

SIGNAL("dbg_IR[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "dbg_IR";
}

SIGNAL("dbg_MD")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 16;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("dbg_MD[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dbg_MD";
}

SIGNAL("dbg_MD[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dbg_MD";
}

SIGNAL("dbg_MD[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dbg_MD";
}

SIGNAL("dbg_MD[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dbg_MD";
}

SIGNAL("dbg_MD[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dbg_MD";
}

SIGNAL("dbg_MD[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dbg_MD";
}

SIGNAL("dbg_MD[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dbg_MD";
}

SIGNAL("dbg_MD[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dbg_MD";
}

SIGNAL("dbg_MD[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dbg_MD";
}

SIGNAL("dbg_MD[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dbg_MD";
}

SIGNAL("dbg_MD[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dbg_MD";
}

SIGNAL("dbg_MD[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dbg_MD";
}

SIGNAL("dbg_MD[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dbg_MD";
}

SIGNAL("dbg_MD[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dbg_MD";
}

SIGNAL("dbg_MD[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dbg_MD";
}

SIGNAL("dbg_MD[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dbg_MD";
}

SIGNAL("clock")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("resetn")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("dbg_FETCH")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("MW")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "";
}

TRANSITION_LIST("dbg_AC[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000.0;
	}
}

TRANSITION_LIST("dbg_AC[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000.0;
	}
}

TRANSITION_LIST("dbg_AC[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000.0;
	}
}

TRANSITION_LIST("dbg_AC[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000.0;
	}
}

TRANSITION_LIST("dbg_AC[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000.0;
	}
}

TRANSITION_LIST("dbg_AC[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000.0;
	}
}

TRANSITION_LIST("dbg_AC[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000.0;
	}
}

TRANSITION_LIST("dbg_AC[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000.0;
	}
}

TRANSITION_LIST("dbg_AC[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000.0;
	}
}

TRANSITION_LIST("dbg_AC[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000.0;
	}
}

TRANSITION_LIST("dbg_AC[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000.0;
	}
}

TRANSITION_LIST("dbg_AC[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000.0;
	}
}

TRANSITION_LIST("dbg_AC[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000.0;
	}
}

TRANSITION_LIST("dbg_AC[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000.0;
	}
}

TRANSITION_LIST("dbg_AC[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000.0;
	}
}

TRANSITION_LIST("dbg_AC[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000.0;
	}
}

TRANSITION_LIST("dbg_MA[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000.0;
	}
}

TRANSITION_LIST("dbg_MA[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000.0;
	}
}

TRANSITION_LIST("dbg_MA[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000.0;
	}
}

TRANSITION_LIST("dbg_MA[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000.0;
	}
}

TRANSITION_LIST("dbg_MA[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000.0;
	}
}

TRANSITION_LIST("dbg_MA[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000.0;
	}
}

TRANSITION_LIST("dbg_MA[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000.0;
	}
}

TRANSITION_LIST("dbg_MA[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000.0;
	}
}

TRANSITION_LIST("dbg_MA[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000.0;
	}
}

TRANSITION_LIST("dbg_MA[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000.0;
	}
}

TRANSITION_LIST("dbg_MA[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000.0;
	}
}

TRANSITION_LIST("dbg_PC[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000.0;
	}
}

TRANSITION_LIST("dbg_PC[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000.0;
	}
}

TRANSITION_LIST("dbg_PC[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000.0;
	}
}

TRANSITION_LIST("dbg_PC[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000.0;
	}
}

TRANSITION_LIST("dbg_PC[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000.0;
	}
}

TRANSITION_LIST("dbg_PC[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000.0;
	}
}

TRANSITION_LIST("dbg_PC[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000.0;
	}
}

TRANSITION_LIST("dbg_PC[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000.0;
	}
}

TRANSITION_LIST("dbg_PC[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000.0;
	}
}

TRANSITION_LIST("dbg_PC[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000.0;
	}
}

TRANSITION_LIST("dbg_PC[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000.0;
	}
}

TRANSITION_LIST("dbg_IR[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("dbg_IR[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("dbg_IR[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("dbg_IR[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("dbg_IR[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("dbg_IR[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("dbg_IR[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("dbg_IR[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("dbg_IR[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("dbg_IR[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("dbg_IR[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("dbg_IR[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("dbg_IR[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("dbg_IR[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("dbg_IR[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("dbg_IR[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("dbg_MD[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000.0;
	}
}

TRANSITION_LIST("dbg_MD[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000.0;
	}
}

TRANSITION_LIST("dbg_MD[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000.0;
	}
}

TRANSITION_LIST("dbg_MD[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000.0;
	}
}

TRANSITION_LIST("dbg_MD[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000.0;
	}
}

TRANSITION_LIST("dbg_MD[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000.0;
	}
}

TRANSITION_LIST("dbg_MD[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000.0;
	}
}

TRANSITION_LIST("dbg_MD[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000.0;
	}
}

TRANSITION_LIST("dbg_MD[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000.0;
	}
}

TRANSITION_LIST("dbg_MD[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000.0;
	}
}

TRANSITION_LIST("dbg_MD[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000.0;
	}
}

TRANSITION_LIST("dbg_MD[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000.0;
	}
}

TRANSITION_LIST("dbg_MD[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000.0;
	}
}

TRANSITION_LIST("dbg_MD[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000.0;
	}
}

TRANSITION_LIST("dbg_MD[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000.0;
	}
}

TRANSITION_LIST("dbg_MD[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000.0;
	}
}

TRANSITION_LIST("clock")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 124;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
	}
}

TRANSITION_LIST("resetn")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 9970.0;
	}
}

TRANSITION_LIST("dbg_FETCH")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000.0;
	}
}

TRANSITION_LIST("MW")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "resetn";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "clock";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "dbg_FETCH";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "dbg_PC";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 3;
	TREE_LEVEL = 0;
	CHILDREN = 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14;
}

DISPLAY_LINE
{
	CHANNEL = "dbg_PC[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "dbg_PC[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "dbg_PC[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "dbg_PC[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "dbg_PC[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "dbg_PC[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "dbg_PC[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "dbg_PC[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "dbg_PC[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "dbg_PC[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "dbg_PC[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "dbg_AC";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 15;
	TREE_LEVEL = 0;
	CHILDREN = 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31;
}

DISPLAY_LINE
{
	CHANNEL = "dbg_AC[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "dbg_AC[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "dbg_AC[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "dbg_AC[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "dbg_AC[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "dbg_AC[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "dbg_AC[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "dbg_AC[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "dbg_AC[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "dbg_AC[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "dbg_AC[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "dbg_AC[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "dbg_AC[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "dbg_AC[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "dbg_AC[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "dbg_AC[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "dbg_MA";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 32;
	TREE_LEVEL = 0;
	CHILDREN = 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43;
}

DISPLAY_LINE
{
	CHANNEL = "dbg_MA[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 32;
}

DISPLAY_LINE
{
	CHANNEL = "dbg_MA[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 32;
}

DISPLAY_LINE
{
	CHANNEL = "dbg_MA[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 35;
	TREE_LEVEL = 1;
	PARENT = 32;
}

DISPLAY_LINE
{
	CHANNEL = "dbg_MA[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 36;
	TREE_LEVEL = 1;
	PARENT = 32;
}

DISPLAY_LINE
{
	CHANNEL = "dbg_MA[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 37;
	TREE_LEVEL = 1;
	PARENT = 32;
}

DISPLAY_LINE
{
	CHANNEL = "dbg_MA[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 38;
	TREE_LEVEL = 1;
	PARENT = 32;
}

DISPLAY_LINE
{
	CHANNEL = "dbg_MA[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 39;
	TREE_LEVEL = 1;
	PARENT = 32;
}

DISPLAY_LINE
{
	CHANNEL = "dbg_MA[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 40;
	TREE_LEVEL = 1;
	PARENT = 32;
}

DISPLAY_LINE
{
	CHANNEL = "dbg_MA[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 41;
	TREE_LEVEL = 1;
	PARENT = 32;
}

DISPLAY_LINE
{
	CHANNEL = "dbg_MA[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 42;
	TREE_LEVEL = 1;
	PARENT = 32;
}

DISPLAY_LINE
{
	CHANNEL = "dbg_MA[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 43;
	TREE_LEVEL = 1;
	PARENT = 32;
}

DISPLAY_LINE
{
	CHANNEL = "dbg_MD";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 44;
	TREE_LEVEL = 0;
	CHILDREN = 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60;
}

DISPLAY_LINE
{
	CHANNEL = "dbg_MD[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 45;
	TREE_LEVEL = 1;
	PARENT = 44;
}

DISPLAY_LINE
{
	CHANNEL = "dbg_MD[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 46;
	TREE_LEVEL = 1;
	PARENT = 44;
}

DISPLAY_LINE
{
	CHANNEL = "dbg_MD[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 47;
	TREE_LEVEL = 1;
	PARENT = 44;
}

DISPLAY_LINE
{
	CHANNEL = "dbg_MD[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 48;
	TREE_LEVEL = 1;
	PARENT = 44;
}

DISPLAY_LINE
{
	CHANNEL = "dbg_MD[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 49;
	TREE_LEVEL = 1;
	PARENT = 44;
}

DISPLAY_LINE
{
	CHANNEL = "dbg_MD[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 50;
	TREE_LEVEL = 1;
	PARENT = 44;
}

DISPLAY_LINE
{
	CHANNEL = "dbg_MD[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 51;
	TREE_LEVEL = 1;
	PARENT = 44;
}

DISPLAY_LINE
{
	CHANNEL = "dbg_MD[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 52;
	TREE_LEVEL = 1;
	PARENT = 44;
}

DISPLAY_LINE
{
	CHANNEL = "dbg_MD[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 53;
	TREE_LEVEL = 1;
	PARENT = 44;
}

DISPLAY_LINE
{
	CHANNEL = "dbg_MD[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 54;
	TREE_LEVEL = 1;
	PARENT = 44;
}

DISPLAY_LINE
{
	CHANNEL = "dbg_MD[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 55;
	TREE_LEVEL = 1;
	PARENT = 44;
}

DISPLAY_LINE
{
	CHANNEL = "dbg_MD[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 56;
	TREE_LEVEL = 1;
	PARENT = 44;
}

DISPLAY_LINE
{
	CHANNEL = "dbg_MD[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 57;
	TREE_LEVEL = 1;
	PARENT = 44;
}

DISPLAY_LINE
{
	CHANNEL = "dbg_MD[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 58;
	TREE_LEVEL = 1;
	PARENT = 44;
}

DISPLAY_LINE
{
	CHANNEL = "dbg_MD[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 59;
	TREE_LEVEL = 1;
	PARENT = 44;
}

DISPLAY_LINE
{
	CHANNEL = "dbg_MD[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 60;
	TREE_LEVEL = 1;
	PARENT = 44;
}

DISPLAY_LINE
{
	CHANNEL = "dbg_IR";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 61;
	TREE_LEVEL = 0;
	CHILDREN = 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77;
}

DISPLAY_LINE
{
	CHANNEL = "dbg_IR[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 62;
	TREE_LEVEL = 1;
	PARENT = 61;
}

DISPLAY_LINE
{
	CHANNEL = "dbg_IR[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 63;
	TREE_LEVEL = 1;
	PARENT = 61;
}

DISPLAY_LINE
{
	CHANNEL = "dbg_IR[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 64;
	TREE_LEVEL = 1;
	PARENT = 61;
}

DISPLAY_LINE
{
	CHANNEL = "dbg_IR[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 65;
	TREE_LEVEL = 1;
	PARENT = 61;
}

DISPLAY_LINE
{
	CHANNEL = "dbg_IR[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 66;
	TREE_LEVEL = 1;
	PARENT = 61;
}

DISPLAY_LINE
{
	CHANNEL = "dbg_IR[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 67;
	TREE_LEVEL = 1;
	PARENT = 61;
}

DISPLAY_LINE
{
	CHANNEL = "dbg_IR[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 68;
	TREE_LEVEL = 1;
	PARENT = 61;
}

DISPLAY_LINE
{
	CHANNEL = "dbg_IR[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 69;
	TREE_LEVEL = 1;
	PARENT = 61;
}

DISPLAY_LINE
{
	CHANNEL = "dbg_IR[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 70;
	TREE_LEVEL = 1;
	PARENT = 61;
}

DISPLAY_LINE
{
	CHANNEL = "dbg_IR[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 71;
	TREE_LEVEL = 1;
	PARENT = 61;
}

DISPLAY_LINE
{
	CHANNEL = "dbg_IR[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 72;
	TREE_LEVEL = 1;
	PARENT = 61;
}

DISPLAY_LINE
{
	CHANNEL = "dbg_IR[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 73;
	TREE_LEVEL = 1;
	PARENT = 61;
}

DISPLAY_LINE
{
	CHANNEL = "dbg_IR[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 74;
	TREE_LEVEL = 1;
	PARENT = 61;
}

DISPLAY_LINE
{
	CHANNEL = "dbg_IR[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 75;
	TREE_LEVEL = 1;
	PARENT = 61;
}

DISPLAY_LINE
{
	CHANNEL = "dbg_IR[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 76;
	TREE_LEVEL = 1;
	PARENT = 61;
}

DISPLAY_LINE
{
	CHANNEL = "dbg_IR[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 77;
	TREE_LEVEL = 1;
	PARENT = 61;
}

DISPLAY_LINE
{
	CHANNEL = "MW";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 78;
	TREE_LEVEL = 0;
}
;
